<!--
  Copyright 2017 Michael Simon
  Modifications from Jordan Dohms
  
  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License.  You may obtain a copy
  of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="authn.abstract, authn/conditions">

  <var name="currentTime" class="java.util.Date" />

  <on-start>
      <evaluate expression="SetRPUIInformation" />
      <evaluate expression="TokenGenerator" />
  </on-start>


  <view-state id="DisplayPrivacyIdeaPage" view="privacyidea">
    <on-render>
      <evaluate expression="environment" result="viewScope.environment"/>
      <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
      <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext))" result="viewScope.authenticationContext" />
      <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.ui.context.RelyingPartyUIContext))" result="viewScope.rpUIContext" />
      <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationErrorContext))" result="viewScope.authenticationErrorContext" />
      <evaluate expression="authenticationContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationWarningContext))" result="viewScope.authenticationWarningContext" />
      <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
      <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
      <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
    </on-render>
    <transition on="proceed" to="ExtractPrivacyIdeaFromForm"/>
  </view-state>

  <action-state id="ExtractPrivacyIdeaFromForm">
    <evaluate expression="ExtractTokenFromForm" />
    <evaluate expression="'proceed'" />

    <transition on="InvalidCredentials" to="DisplayPrivacyIdeaPage" />
    <transition on="proceed" to="ValidatePrivacyIdeaResponse" />
  </action-state>

  <action-state id="ValidatePrivacyIdeaResponse">
    <evaluate expression="privacyIdeaTokenValidator"/>
    <evaluate expression="'proceed'"/>

    <!-- At the moment user is redirected back to the totp form is he/she hasn't registered token -->
    <transition on="AccountError" to="DisplayPrivacyIdeaPage" />

    <transition on="proceed" to="proceed"/>

    <!-- On all errors, transition back to 2fa form -->
    <transition to="DisplayPrivacyIdeaPage" />
  </action-state>
        
        <bean-import resource="../../../conf/authn/privacyidea-authn-beans.xml" />

</flow>
